import{formattingDateTime,getDateTimeV2,getFromLocalStorage,idGenerator,saveToLocalStorage}from"../modules/utils.js";const firstNameInput=document.getElementById("first-name-input"),lastNameInput=document.getElementById("last-name-input"),usernameInput=document.getElementById("username-input"),emailInput=document.getElementById("email-input"),passwordInput=document.getElementById("password-input"),confirmPasswordInput=document.getElementById("confirm-password-input"),acceptTermsCheckbox=document.getElementById("accept-terms-checkbox"),registerBtn=document.getElementById("register-btn");function isUserValid(e){const t={email:/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/,name:/^[a-zA-Z]{3,24}$/,username:/^[a-zA-Z]\w{2,15}$/,password:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@\(!\)%*?&])[A-Za-z\d@\(!\)%*?&]{8,24}$/},a=e.name&&e.family&&e.email&&e.username&&e.password&&e.confirmPassword;return acceptTermsCheckbox.checked?a?t.name.test(e.name)?t.name.test(e.family)?t.username.test(e.username)?t.email.test(e.email)?t.password.test(e.password)?e.password===e.confirmPassword||(swal({title:"Password and confirm password must be the same!",icon:"warning"}),!1):(swal({title:"password must contain at least 8 charactors",text:"must have lower case, upper case, number and special charactor",icon:"warning"}),!1):(swal({title:"please enter valid email",icon:"warning"}),!1):(swal({title:"please enter valid username",icon:"warning"}),!1):(swal({title:"please enter valid name (last name)",icon:"warning"}),!1):(swal({title:"please enter valid name (first name)",icon:"warning"}),!1):(swal({title:"Please enter all fields",icon:"warning"}),!1):(swal({title:"Please accept terms",icon:"warning"}),!1)}function signUpUser(){const e={id:idGenerator(),name:firstNameInput.value.trim(),family:lastNameInput.value.trim(),username:usernameInput.value.trim(),email:emailInput.value.trim(),password:passwordInput.value.trim(),confirmPassword:confirmPasswordInput.value.trim(),phone:"",position:"",createdAt:formattingDateTime(getDateTimeV2()).dateTimeISO,profile:"",todos:[],notifications:[]};isUserValid(e)&&(delete e.confirmPassword,saveNewUser(e))}function saveNewUser(e){const t=getFromLocalStorage("DB");if(!t.users.find((t=>t.id===e.id))){t.users.push(e);saveToLocalStorage("DB",t)&&(location.href="./login.html")}}registerBtn.addEventListener("click",signUpUser);